# -*- coding: utf-8 -*-
"""Limpiezaproyecto.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FKxzEh-wX0hQTSAhA__F14s2-6PjwXLo
"""

#Importar librerias
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

from google.colab import drive
import pandas as pd

# Monta Google Drive
drive.mount('/content/drive')

# Ruta al archivo en Google Drive
ruta = "/content/drive/My Drive/Proyecto final/dataset_banco.csv"

# Leer el archivo CSV
data = pd.read_csv(ruta)

data.info

data.dropna (inplace=True)
data.info

#Conteo de los niveles en las diferentes columnas categoricas
cols_cat =['job','marital','education','default','housing','loan','contact','month','poutcome','y']

for col in cols_cat:
  print (f'Columna {col}:{data[col].nunique()} subniveles' )

#Ver columnas numericas
data.describe()

#Filas repetidad
print(f'Tamaños del set antes de eliminar las filas repetidas:{data.shape}')
data.drop_duplicates(inplace=True)
print(f'Tamaño del set despues de eliminar las filas repetidas: {data.shape}')

#Generar graficas individuales

cols_num = ['age','balance', 'day','duration','campaign','pdays','previous']

fig, ax = plt.subplots (nrows=7, ncols=1, figsize=(8,30))
fig.subplots_adjust(hspace=0.5)

for i,col in enumerate(cols_num):
  sns.boxplot(x=col, data=data, ax=ax [i])
  ax[i].set_title(col)

#Eliminar filas con "age" >100
print(f'Tamaño del set antes de eliminar resgistros de edad:{data.shape}')
data = data [data['age']<=100]
print(f'Tamaño del set despues de eliminar registros de edad:{data.shape}')

#Eliminar filas con "duration">0
print(f'Tamaño del set antes de eliminar los registros de duracion:{data.shape}')
data=data[data['duration']>0]
print(f'Tamañon del set despues de eliminar registros de duracion:{data.shape}')

#Eliminar filas con "previous">100
print(f'Tamaño del set antes de eliminar registros de previous:{data.shape}')
data = data[data['previous']<=100]
print(f'Tamaño del set depues de eliminar registros de previous:{data.shape}')

#Graficar los subniveles de cada categoria
cols_cat = ['job','marital', 'education', 'default', 'housing', 'loan', 'contact', 'month','poutcome','y']

fig, ax = plt.subplots (nrows=10, ncols=1, figsize=(10,30))
fig.subplots_adjust (hspace=1)

for i, col in enumerate(cols_cat):
  sns.countplot(x=col, data=data, ax=ax[i])
  ax[i] .set_title(col)
  ax[i].set_xticklabels (ax[i].get_xticklabels(),rotation=30)

for column in data.columns:
    if column in cols_cat:
        data[column] = data[column].str.lower()

# El resto de tu código continúa aquí
fig, ax = plt.subplots(nrows=10, ncols=1, figsize=(10, 30))
fig.subplots_adjust(hspace=1)

for i, col in enumerate(cols_cat):
    sns.countplot(x=col, data=data, ax=ax[i])
    ax[i].set_title(col)
    ax[i].set_xticklabels(ax[i].get_xticklabels(), rotation=30)

#Integrar en columna job
print (data['job'].unique())
data['job'] = data ['job'].str.replace('admin.','administrative',regex=False)
print(data['job'].unique())

#Integrar columnas en marital
print(data['marital'].unique())
data['marital'] = data ['marital'].str.replace('div.','divorced', regex=False)
print(data['marital'].unique())

#Integrar columnas en education
print(data['education'].unique())
data['education'] = data['education'].str.replace('sec.','secondary',regex=False)
data[data['education']=='unk'] = 'unknown'
print(data['education'].unique())

#Integrar columnas de contact
 print(data['contact'].unique())
 data[data['contact']=='phone'] = 'telephone'
 print(data['contact'].unique())

#Poutcome
print(data['poutcome'].unique())
data[data['poutcome'] =='unk'] = 'unknown'
print(data['poutcome'].unique())

data.shape

ruta = "/content/drive/My Drive/Proyecto final/dataset_banco_clean.csv"
data.to_csv(ruta)